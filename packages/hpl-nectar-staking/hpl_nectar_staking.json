{
  "version": "0.1.47",
  "name": "hpl_nectar_staking",
  "instructions": [
    {
      "name": "createStakingPool",
      "accounts": [
        {
          "name": "key",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "currency",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Currency to be used for the staking_pool"
          ]
        },
        {
          "name": "project",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HIVE CONTROL"
          ]
        },
        {
          "name": "delegateAuthority",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The wallet that holds the authority over the assembler"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SYSTEM PROGRAM"
          ]
        },
        {
          "name": "clockSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SYSVAR CLOCK"
          ]
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "RENT SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL TOKEN PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HIVE CONTROL PROGRAM"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "CreateStakingPoolArgs"
          }
        }
      ]
    },
    {
      "name": "updateStakingPool",
      "accounts": [
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "currency",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Currency to be used for the staking_pool"
          ]
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Collection mint address to be used for the staking_pool"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that holds authority for this action"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "rent",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SYSVAR RENT"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        },
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "delegateAuthority",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UpdateStakingPoolArgs"
          }
        }
      ]
    },
    {
      "name": "initMultipliers",
      "accounts": [
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "multipliers",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Multiplier state account"
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The wallet that holds authority for this action"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        },
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "delegateAuthority",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitMultipliersArgs"
          }
        }
      ]
    },
    {
      "name": "addMultiplier",
      "accounts": [
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "multipliers",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Multiplier state account"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "RENT SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        },
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "delegateAuthority",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "AddMultiplierArgs"
          }
        }
      ]
    },
    {
      "name": "initStaker",
      "accounts": [
        {
          "name": "stakingPool",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "staker",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Staker state account"
          ]
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        },
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "stake",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "staker",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Staker state account"
          ]
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "characterManager",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Character Manager Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "StakeArgs"
          }
        }
      ]
    },
    {
      "name": "unstake",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "stakingPool",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "staker",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Staker state account"
          ]
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "characterManager",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Character Manager Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "StakeArgs"
          }
        }
      ]
    },
    {
      "name": "claimRewards",
      "accounts": [
        {
          "name": "project",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "stakingPool",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "StakingPool state account"
          ]
        },
        {
          "name": "stakingPoolDelegate",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "StakingPool delegate account for this project",
            "It is required to mint rewards"
          ]
        },
        {
          "name": "multipliers",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Staker state account"
          ]
        },
        {
          "name": "staker",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Staker state account"
          ]
        },
        {
          "name": "currency",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "holderAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "characterManager",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Character Manager Program"
          ]
        },
        {
          "name": "currencyManagerProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Currency Manager Program"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE TOKEN PROGRAM"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "ClaimRewardsArgs"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Multipliers",
      "docs": [
        "The staking_pool multiplier state account",
        "PDA: ['multipliers', staking_pool]",
        "Category: multiplier_state"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "stakingPool",
            "docs": [
              "The staking_pool this multiplier is associated with"
            ],
            "type": "publicKey"
          },
          {
            "name": "decimals",
            "docs": [
              "The decimals for multipliers"
            ],
            "type": "u8"
          },
          {
            "name": "durationMultipliers",
            "docs": [
              "The duration multipliers for the staking_pool"
            ],
            "type": {
              "vec": {
                "defined": "Multiplier"
              }
            }
          },
          {
            "name": "countMultipliers",
            "docs": [
              "The duration multipliers for the staking_pool"
            ],
            "type": {
              "vec": {
                "defined": "Multiplier"
              }
            }
          },
          {
            "name": "creatorMultipliers",
            "docs": [
              "The duration multipliers for the staking_pool"
            ],
            "type": {
              "vec": {
                "defined": "Multiplier"
              }
            }
          },
          {
            "name": "collectionMultipliers",
            "docs": [
              "The duration multipliers for the staking_pool"
            ],
            "type": {
              "vec": {
                "defined": "Multiplier"
              }
            }
          }
        ]
      }
    },
    {
      "name": "StakingPool",
      "docs": [
        "The NFT collection staking_pool state account",
        "PDA: ['staking_pool', project, key]",
        "Category: staking_pool_state"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "project",
            "type": "publicKey"
          },
          {
            "name": "key",
            "type": "publicKey"
          },
          {
            "name": "currency",
            "docs": [
              "The mint of the token distributed to stakers"
            ],
            "type": "publicKey"
          },
          {
            "name": "lockType",
            "docs": [
              "Lock type { Freeze, Custody }"
            ],
            "type": {
              "defined": "LockType"
            }
          },
          {
            "name": "name",
            "docs": [
              "name of the staking_pool"
            ],
            "type": "string"
          },
          {
            "name": "rewardsPerDuration",
            "docs": [
              "The rewards per selected duration"
            ],
            "type": "u64"
          },
          {
            "name": "rewardsDuration",
            "docs": [
              "The duration of the rewards in seconds"
            ],
            "type": "u64"
          },
          {
            "name": "maxRewardsDuration",
            "docs": [
              "The maximum duration of the rewards in seconds"
            ],
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "minStakeDuration",
            "docs": [
              "The minimum stake duration in seconds"
            ],
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "cooldownDuration",
            "docs": [
              "Cooldown duration in seconds"
            ],
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "resetStakeDuration",
            "docs": [
              "Flag to reset stake duration on restaking"
            ],
            "type": "bool"
          },
          {
            "name": "allowedMints",
            "docs": [
              "Allowed mints only"
            ],
            "type": "bool"
          },
          {
            "name": "totalStaked",
            "docs": [
              "Total staked nfts"
            ],
            "type": "u64"
          },
          {
            "name": "startTime",
            "docs": [
              "The unix_timestamp when the statking starts"
            ],
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "endTime",
            "docs": [
              "The unix_timestamp when the statking ends"
            ],
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "characterModels",
            "docs": [
              "The collection mint addresses to be used for the staking_pool"
            ],
            "type": {
              "vec": "publicKey"
            }
          }
        ]
      }
    },
    {
      "name": "Staker",
      "docs": [
        "The staking_pool multiplier state account",
        "PDA: ['staker', wallet, staking_pool]",
        "Category: staker_state"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "stakingPool",
            "docs": [
              "The staking_pool this multiplier is associated with"
            ],
            "type": "publicKey"
          },
          {
            "name": "wallet",
            "docs": [
              "The wallet that owns this staker account"
            ],
            "type": "publicKey"
          },
          {
            "name": "totalStaked",
            "docs": [
              "The total amount of tokens staked"
            ],
            "type": "u64"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "InitMultipliersArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "decimals",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "AddMultiplierArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "value",
            "type": "u64"
          },
          {
            "name": "multiplierType",
            "type": {
              "defined": "MultiplierType"
            }
          }
        ]
      }
    },
    {
      "name": "CreateStakingPoolArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "lockType",
            "type": {
              "option": {
                "defined": "LockType"
              }
            }
          },
          {
            "name": "rewardsPerDuration",
            "type": "u64"
          },
          {
            "name": "rewardsDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "maxRewardsDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "minStakeDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "cooldownDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "resetStakeDuration",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "startTime",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "endTime",
            "type": {
              "option": "i64"
            }
          }
        ]
      }
    },
    {
      "name": "UpdateStakingPoolArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "rewardsPerDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "rewardsDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "maxRewardsDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "minStakeDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "cooldownDuration",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "resetStakeDuration",
            "type": {
              "option": "bool"
            }
          },
          {
            "name": "startTime",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "endTime",
            "type": {
              "option": "i64"
            }
          }
        ]
      }
    },
    {
      "name": "ClaimRewardsArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "leafIdx",
            "type": "u32"
          },
          {
            "name": "source",
            "type": {
              "defined": "CharacterSource"
            }
          },
          {
            "name": "usedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          }
        ]
      }
    },
    {
      "name": "StakeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "leafIdx",
            "type": "u32"
          },
          {
            "name": "sourceHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "usedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          }
        ]
      }
    },
    {
      "name": "Multiplier",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "value",
            "type": "u64"
          },
          {
            "name": "multiplierType",
            "type": {
              "defined": "MultiplierType"
            }
          }
        ]
      }
    },
    {
      "name": "MultiplierType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "StakeDuration",
            "fields": [
              {
                "name": "minDuration",
                "type": "u64"
              }
            ]
          },
          {
            "name": "NFTCount",
            "fields": [
              {
                "name": "minCount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "Creator",
            "fields": [
              {
                "name": "creator",
                "type": "publicKey"
              }
            ]
          },
          {
            "name": "Collection",
            "fields": [
              {
                "name": "collection",
                "type": "publicKey"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "LockType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Freeze"
          },
          {
            "name": "Custoday"
          }
        ]
      }
    },
    {
      "name": "CharacterSource",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Wrapped",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "criteria",
                "type": {
                  "defined": "NftWrapCriteria"
                }
              },
              {
                "name": "isCompressed",
                "type": "bool"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "NftWrapCriteria",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Collection",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "Creator",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "MerkleTree",
            "fields": [
              "publicKey"
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterUsedBy",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "Staking",
            "fields": [
              {
                "name": "pool",
                "type": "publicKey"
              },
              {
                "name": "staker",
                "type": "publicKey"
              },
              {
                "name": "stakedAt",
                "type": "i64"
              },
              {
                "name": "claimedAt",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Mission",
            "fields": [
              {
                "name": "id",
                "type": "publicKey"
              },
              {
                "name": "rewards",
                "type": {
                  "vec": {
                    "defined": "EarnedReward"
                  }
                }
              },
              {
                "name": "endTime",
                "type": "u64"
              },
              {
                "name": "rewardsCollected",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Guild",
            "fields": [
              {
                "name": "id",
                "type": "publicKey"
              },
              {
                "name": "role",
                "type": {
                  "defined": "GuildRole"
                }
              },
              {
                "name": "order",
                "type": "u8"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "EarnedReward",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "delta",
            "type": "u8"
          },
          {
            "name": "rewardIdx",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "GuildRole",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Chief"
          },
          {
            "name": "Member"
          }
        ]
      }
    },
    {
      "name": "CharacterUsedBy",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "Staking",
            "fields": [
              {
                "name": "pool",
                "type": "publicKey"
              },
              {
                "name": "staker",
                "type": "publicKey"
              },
              {
                "name": "stakedAt",
                "type": "i64"
              },
              {
                "name": "claimedAt",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Mission",
            "fields": [
              {
                "name": "id",
                "type": "publicKey"
              },
              {
                "name": "rewards",
                "type": {
                  "vec": {
                    "defined": "EarnedReward"
                  }
                }
              },
              {
                "name": "endTime",
                "type": "u64"
              },
              {
                "name": "rewardsCollected",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Guild",
            "fields": [
              {
                "name": "id",
                "type": "publicKey"
              },
              {
                "name": "role",
                "type": {
                  "defined": "GuildRole"
                }
              },
              {
                "name": "order",
                "type": "u8"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterSource",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Wrapped",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "criteria",
                "type": {
                  "defined": "NftWrapCriteria"
                }
              },
              {
                "name": "isCompressed",
                "type": "bool"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "GuildRole",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Chief"
          },
          {
            "name": "Member"
          }
        ]
      }
    },
    {
      "name": "NftWrapCriteria",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Collection",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "Creator",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "MerkleTree",
            "fields": [
              "publicKey"
            ]
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "Overflow",
      "msg": "Opertaion overflowed"
    },
    {
      "code": 6001,
      "name": "OnlyOwner",
      "msg": "Only the owner can perform this operation"
    },
    {
      "code": 6002,
      "name": "InvalidMetadata",
      "msg": "Invalid metadata"
    },
    {
      "code": 6003,
      "name": "InvalidNFT",
      "msg": "Invalid NFT"
    },
    {
      "code": 6004,
      "name": "RewardsNotAvailable",
      "msg": "Rewards not available yet"
    },
    {
      "code": 6005,
      "name": "CantStakeYet",
      "msg": "Can't stake yet"
    },
    {
      "code": 6006,
      "name": "CharacterNotStaked",
      "msg": "Character is not staked"
    },
    {
      "code": 6007,
      "name": "CharacterUsed",
      "msg": "Character is used by some other service"
    },
    {
      "code": 6008,
      "name": "StakerMismatch",
      "msg": "Character is staked by another staker"
    },
    {
      "code": 6009,
      "name": "CantUnstakeYet",
      "msg": "Can't unstake yet"
    },
    {
      "code": 6010,
      "name": "DepositAccountNotProvided",
      "msg": "Deposit account is not provided"
    },
    {
      "code": 6011,
      "name": "NotImplemented",
      "msg": "Not Implemented"
    }
  ],
  "metadata": {
    "address": "MiNESdRXUSmWY7NkAKdW9nMkjJZCaucguY3MDvkSmr6",
    "origin": "anchor",
    "binaryVersion": "0.29.0",
    "libVersion": "unknown"
  }
}