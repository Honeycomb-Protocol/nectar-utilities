/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import { LockType, lockTypeBeet } from './LockType'
export type CreateStakingPoolArgs = {
  name: string
  lockType: beet.COption<LockType>
  rewardsPerDuration: beet.bignum
  rewardsDuration: beet.COption<beet.bignum>
  maxRewardsDuration: beet.COption<beet.bignum>
  minStakeDuration: beet.COption<beet.bignum>
  cooldownDuration: beet.COption<beet.bignum>
  resetStakeDuration: beet.COption<boolean>
  startTime: beet.COption<beet.bignum>
  endTime: beet.COption<beet.bignum>
}

/**
 * @category userTypes
 * @category generated
 */
export const createStakingPoolArgsBeet =
  new beet.FixableBeetArgsStruct<CreateStakingPoolArgs>(
    [
      ['name', beet.utf8String],
      ['lockType', beet.coption(lockTypeBeet)],
      ['rewardsPerDuration', beet.u64],
      ['rewardsDuration', beet.coption(beet.u64)],
      ['maxRewardsDuration', beet.coption(beet.u64)],
      ['minStakeDuration', beet.coption(beet.u64)],
      ['cooldownDuration', beet.coption(beet.u64)],
      ['resetStakeDuration', beet.coption(beet.bool)],
      ['startTime', beet.coption(beet.i64)],
      ['endTime', beet.coption(beet.i64)],
    ],
    'CreateStakingPoolArgs'
  )
