/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import { Currency, currencyBeet } from './Currency'
import {
  MissionRequirement,
  missionRequirementBeet,
} from './MissionRequirement'
import { Reward, rewardBeet } from './Reward'
export type UpdateMissionArgs = {
  name: beet.COption<string>
  minXp: beet.COption<beet.bignum>
  cost: beet.COption<Currency>
  requirement: beet.COption<MissionRequirement>
  removeAllRewards: beet.COption<boolean>
  addRewards: beet.COption<Reward[]>
  removeRewardIndices: beet.COption<Uint8Array>
}

/**
 * @category userTypes
 * @category generated
 */
export const updateMissionArgsBeet =
  new beet.FixableBeetArgsStruct<UpdateMissionArgs>(
    [
      ['name', beet.coption(beet.utf8String)],
      ['minXp', beet.coption(beet.u64)],
      ['cost', beet.coption(currencyBeet)],
      ['requirement', beet.coption(missionRequirementBeet)],
      ['removeAllRewards', beet.coption(beet.bool)],
      ['addRewards', beet.coption(beet.array(rewardBeet))],
      ['removeRewardIndices', beet.coption(beet.bytes)],
    ],
    'UpdateMissionArgs'
  )
