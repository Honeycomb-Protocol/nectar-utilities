/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beet from '@metaplex-foundation/beet'
import * as beetSolana from '@metaplex-foundation/beet-solana'
/**
 * This type is used to derive the {@link NftWrapCriteria} type as well as the de/serializer.
 * However don't refer to it in your code but use the {@link NftWrapCriteria} type instead.
 *
 * @category userTypes
 * @category enums
 * @category generated
 * @private
 */
export type NftWrapCriteriaRecord = {
  Collection: { fields: [web3.PublicKey] }
  Creator: { fields: [web3.PublicKey] }
  MerkleTree: { fields: [web3.PublicKey] }
}

/**
 * Union type respresenting the NftWrapCriteria data enum defined in Rust.
 *
 * NOTE: that it includes a `__kind` property which allows to narrow types in
 * switch/if statements.
 * Additionally `isNftWrapCriteria*` type guards are exposed below to narrow to a specific variant.
 *
 * @category userTypes
 * @category enums
 * @category generated
 */
export type NftWrapCriteria = beet.DataEnumKeyAsKind<NftWrapCriteriaRecord>

export const isNftWrapCriteriaCollection = (
  x: NftWrapCriteria
): x is NftWrapCriteria & { __kind: 'Collection' } => x.__kind === 'Collection'
export const isNftWrapCriteriaCreator = (
  x: NftWrapCriteria
): x is NftWrapCriteria & { __kind: 'Creator' } => x.__kind === 'Creator'
export const isNftWrapCriteriaMerkleTree = (
  x: NftWrapCriteria
): x is NftWrapCriteria & { __kind: 'MerkleTree' } => x.__kind === 'MerkleTree'

/**
 * @category userTypes
 * @category generated
 */
export const nftWrapCriteriaBeet = beet.dataEnum<NftWrapCriteriaRecord>([
  [
    'Collection',
    new beet.BeetArgsStruct<NftWrapCriteriaRecord['Collection']>(
      [['fields', beet.fixedSizeTuple([beetSolana.publicKey])]],
      'NftWrapCriteriaRecord["Collection"]'
    ),
  ],
  [
    'Creator',
    new beet.BeetArgsStruct<NftWrapCriteriaRecord['Creator']>(
      [['fields', beet.fixedSizeTuple([beetSolana.publicKey])]],
      'NftWrapCriteriaRecord["Creator"]'
    ),
  ],
  [
    'MerkleTree',
    new beet.BeetArgsStruct<NftWrapCriteriaRecord['MerkleTree']>(
      [['fields', beet.fixedSizeTuple([beetSolana.publicKey])]],
      'NftWrapCriteriaRecord["MerkleTree"]'
    ),
  ],
]) as beet.FixableBeet<NftWrapCriteria, NftWrapCriteria>
